#!/usr/local/bin/perl -w
use strict;

  # to find current version
use lib "lib";
use LWP;

use Sysadm::Install qw(:all);
use File::Find;

my $current_version = $LWP::VERSION;

if( $^O =~ /^MacOS|darwin$/ ) {
    die "Aiiieeeh! This won't work on a macbook. Tar broken. ",
        "Use Linux. ([rt.cpan.org #94844])"; 
}

my $release_version =
    ask "Release version", $current_version;

my $prev_version = ask "Previous release", $release_version - 0.01;

if( $current_version ne $release_version ) {
    die "Fix version in lib/LWP.pm (currently $current_version";
}

  # Find updated files since last release and check if their version
  # numbers are current
my $gitout = `git diff --name-only $prev_version`;

for my $file ( split "\n", $gitout ) {

    next if $file eq "Changes";

    my $version = version_find( $file );

    if( $version and $version ne $release_version ) {
        system "grep", "VERSION", $file, "/dev/null";
    }
}

$gitout = `git status --short`;

if( length $gitout ) {
    die "Workspace unclean:\n $gitout\n";
}

$gitout = `git shortlog -n $prev_version..`;

print "Now update Changes with a clean version of this:\n$gitout\n";

###########################################
sub version_find {
###########################################
    my( $file ) = @_;

    my $data = slurp $file;

    if ($data =~ /\$VERSION\s*=\s*"(.*)"/ ) {
        return $1;
    }

    return undef;
}
